//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: from_libqaul.proto

package qaul_rpc.pb;

@kotlin.jvm.JvmSynthetic
inline fun fromRouter(block: qaul_rpc.pb.FromRouterKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.FromRouter =
  qaul_rpc.pb.FromRouterKt.Dsl._create(qaul_rpc.pb.FromLibqaulOuterClass.FromRouter.newBuilder()).apply { block() }._build()
object FromRouterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul_rpc.pb.FromLibqaulOuterClass.FromRouter.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul_rpc.pb.FromLibqaulOuterClass.FromRouter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul_rpc.pb.FromLibqaulOuterClass.FromRouter = _builder.build()

    /**
     * <code>.qaul_rpc.pb.UserList user_list = 1;</code>
     */
    var userList: qaul_rpc.pb.FromLibqaulOuterClass.UserList
      @JvmName("getUserList")
      get() = _builder.getUserList()
      @JvmName("setUserList")
      set(value) {
        _builder.setUserList(value)
      }
    /**
     * <code>.qaul_rpc.pb.UserList user_list = 1;</code>
     */
    fun clearUserList() {
      _builder.clearUserList()
    }
    /**
     * <code>.qaul_rpc.pb.UserList user_list = 1;</code>
     * @return Whether the userList field is set.
     */
    fun hasUserList(): kotlin.Boolean {
      return _builder.hasUserList()
    }
    val typeCase: qaul_rpc.pb.FromLibqaulOuterClass.FromRouter.TypeCase
      @JvmName("getTypeCase")
      get() = _builder.getTypeCase()

    fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul_rpc.pb.FromLibqaulOuterClass.FromRouter.copy(block: qaul_rpc.pb.FromRouterKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.FromRouter =
  qaul_rpc.pb.FromRouterKt.Dsl._create(this.toBuilder()).apply { block() }._build()
