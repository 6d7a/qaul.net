//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: to_libqaul.proto

package qaul_rpc.pb;

@kotlin.jvm.JvmSynthetic
inline fun toNode(block: qaul_rpc.pb.ToNodeKt.Dsl.() -> Unit): qaul_rpc.pb.ToLibqaulOuterClass.ToNode =
  qaul_rpc.pb.ToNodeKt.Dsl._create(qaul_rpc.pb.ToLibqaulOuterClass.ToNode.newBuilder()).apply { block() }._build()
object ToNodeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul_rpc.pb.ToLibqaulOuterClass.ToNode.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul_rpc.pb.ToLibqaulOuterClass.ToNode.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul_rpc.pb.ToLibqaulOuterClass.ToNode = _builder.build()

    /**
     * <code>bool start_session = 1;</code>
     */
    var startSession: kotlin.Boolean
      @JvmName("getStartSession")
      get() = _builder.getStartSession()
      @JvmName("setStartSession")
      set(value) {
        _builder.setStartSession(value)
      }
    /**
     * <code>bool start_session = 1;</code>
     */
    fun clearStartSession() {
      _builder.clearStartSession()
    }
    /**
     * <code>bool start_session = 1;</code>
     * @return Whether the startSession field is set.
     */
    fun hasStartSession(): kotlin.Boolean {
      return _builder.hasStartSession()
    }

    /**
     * <code>.qaul_rpc.pb.CreateUser create_user = 2;</code>
     */
    var createUser: qaul_rpc.pb.ToLibqaulOuterClass.CreateUser
      @JvmName("getCreateUser")
      get() = _builder.getCreateUser()
      @JvmName("setCreateUser")
      set(value) {
        _builder.setCreateUser(value)
      }
    /**
     * <code>.qaul_rpc.pb.CreateUser create_user = 2;</code>
     */
    fun clearCreateUser() {
      _builder.clearCreateUser()
    }
    /**
     * <code>.qaul_rpc.pb.CreateUser create_user = 2;</code>
     * @return Whether the createUser field is set.
     */
    fun hasCreateUser(): kotlin.Boolean {
      return _builder.hasCreateUser()
    }
    val typeCase: qaul_rpc.pb.ToLibqaulOuterClass.ToNode.TypeCase
      @JvmName("getTypeCase")
      get() = _builder.getTypeCase()

    fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul_rpc.pb.ToLibqaulOuterClass.ToNode.copy(block: qaul_rpc.pb.ToNodeKt.Dsl.() -> Unit): qaul_rpc.pb.ToLibqaulOuterClass.ToNode =
  qaul_rpc.pb.ToNodeKt.Dsl._create(this.toBuilder()).apply { block() }._build()
