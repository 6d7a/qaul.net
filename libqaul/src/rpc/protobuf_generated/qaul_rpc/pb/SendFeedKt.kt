//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: to_libqaul.proto

package qaul_rpc.pb;

@kotlin.jvm.JvmSynthetic
inline fun sendFeed(block: qaul_rpc.pb.SendFeedKt.Dsl.() -> Unit): qaul_rpc.pb.ToLibqaulOuterClass.SendFeed =
  qaul_rpc.pb.SendFeedKt.Dsl._create(qaul_rpc.pb.ToLibqaulOuterClass.SendFeed.newBuilder()).apply { block() }._build()
object SendFeedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul_rpc.pb.ToLibqaulOuterClass.SendFeed.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul_rpc.pb.ToLibqaulOuterClass.SendFeed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul_rpc.pb.ToLibqaulOuterClass.SendFeed = _builder.build()

    /**
     * <code>string content = 1;</code>
     */
    var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * <code>string content = 1;</code>
     */
    fun clearContent() {
      _builder.clearContent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul_rpc.pb.ToLibqaulOuterClass.SendFeed.copy(block: qaul_rpc.pb.SendFeedKt.Dsl.() -> Unit): qaul_rpc.pb.ToLibqaulOuterClass.SendFeed =
  qaul_rpc.pb.SendFeedKt.Dsl._create(this.toBuilder()).apply { block() }._build()
