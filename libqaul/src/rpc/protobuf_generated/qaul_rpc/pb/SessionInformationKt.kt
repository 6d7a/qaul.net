//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: from_libqaul.proto

package qaul_rpc.pb;

@kotlin.jvm.JvmSynthetic
inline fun sessionInformation(block: qaul_rpc.pb.SessionInformationKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation =
  qaul_rpc.pb.SessionInformationKt.Dsl._create(qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation.newBuilder()).apply { block() }._build()
object SessionInformationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation = _builder.build()

    /**
     * <code>bool user_exists = 1;</code>
     */
    var userExists: kotlin.Boolean
      @JvmName("getUserExists")
      get() = _builder.getUserExists()
      @JvmName("setUserExists")
      set(value) {
        _builder.setUserExists(value)
      }
    /**
     * <code>bool user_exists = 1;</code>
     */
    fun clearUserExists() {
      _builder.clearUserExists()
    }

    /**
     * <code>.qaul_rpc.pb.MyUser my_user = 2;</code>
     */
    var myUser: qaul_rpc.pb.FromLibqaulOuterClass.MyUser
      @JvmName("getMyUser")
      get() = _builder.getMyUser()
      @JvmName("setMyUser")
      set(value) {
        _builder.setMyUser(value)
      }
    /**
     * <code>.qaul_rpc.pb.MyUser my_user = 2;</code>
     */
    fun clearMyUser() {
      _builder.clearMyUser()
    }
    /**
     * <code>.qaul_rpc.pb.MyUser my_user = 2;</code>
     * @return Whether the myUser field is set.
     */
    fun hasMyUser(): kotlin.Boolean {
      return _builder.hasMyUser()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation.copy(block: qaul_rpc.pb.SessionInformationKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.SessionInformation =
  qaul_rpc.pb.SessionInformationKt.Dsl._create(this.toBuilder()).apply { block() }._build()
