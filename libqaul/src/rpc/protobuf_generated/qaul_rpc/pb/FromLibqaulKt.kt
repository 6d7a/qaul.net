//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: from_libqaul.proto

package qaul_rpc.pb;

@kotlin.jvm.JvmSynthetic
inline fun fromLibqaul(block: qaul_rpc.pb.FromLibqaulKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul =
  qaul_rpc.pb.FromLibqaulKt.Dsl._create(qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul.newBuilder()).apply { block() }._build()
object FromLibqaulKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul = _builder.build()

    /**
     * <code>.qaul_rpc.pb.FromNode node = 1;</code>
     */
    var node: qaul_rpc.pb.FromLibqaulOuterClass.FromNode
      @JvmName("getNode")
      get() = _builder.getNode()
      @JvmName("setNode")
      set(value) {
        _builder.setNode(value)
      }
    /**
     * <code>.qaul_rpc.pb.FromNode node = 1;</code>
     */
    fun clearNode() {
      _builder.clearNode()
    }
    /**
     * <code>.qaul_rpc.pb.FromNode node = 1;</code>
     * @return Whether the node field is set.
     */
    fun hasNode(): kotlin.Boolean {
      return _builder.hasNode()
    }

    /**
     * <code>.qaul_rpc.pb.FromRouter router = 2;</code>
     */
    var router: qaul_rpc.pb.FromLibqaulOuterClass.FromRouter
      @JvmName("getRouter")
      get() = _builder.getRouter()
      @JvmName("setRouter")
      set(value) {
        _builder.setRouter(value)
      }
    /**
     * <code>.qaul_rpc.pb.FromRouter router = 2;</code>
     */
    fun clearRouter() {
      _builder.clearRouter()
    }
    /**
     * <code>.qaul_rpc.pb.FromRouter router = 2;</code>
     * @return Whether the router field is set.
     */
    fun hasRouter(): kotlin.Boolean {
      return _builder.hasRouter()
    }

    /**
     * <code>.qaul_rpc.pb.FromFeed feed = 3;</code>
     */
    var feed: qaul_rpc.pb.FromLibqaulOuterClass.FromFeed
      @JvmName("getFeed")
      get() = _builder.getFeed()
      @JvmName("setFeed")
      set(value) {
        _builder.setFeed(value)
      }
    /**
     * <code>.qaul_rpc.pb.FromFeed feed = 3;</code>
     */
    fun clearFeed() {
      _builder.clearFeed()
    }
    /**
     * <code>.qaul_rpc.pb.FromFeed feed = 3;</code>
     * @return Whether the feed field is set.
     */
    fun hasFeed(): kotlin.Boolean {
      return _builder.hasFeed()
    }
    val moduleCase: qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul.ModuleCase
      @JvmName("getModuleCase")
      get() = _builder.getModuleCase()

    fun clearModule() {
      _builder.clearModule()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul.copy(block: qaul_rpc.pb.FromLibqaulKt.Dsl.() -> Unit): qaul_rpc.pb.FromLibqaulOuterClass.FromLibqaul =
  qaul_rpc.pb.FromLibqaulKt.Dsl._create(this.toBuilder()).apply { block() }._build()
