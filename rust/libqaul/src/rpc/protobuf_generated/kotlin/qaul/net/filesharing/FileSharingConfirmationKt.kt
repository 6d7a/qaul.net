//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/filesharing/filesharing_net.proto

package qaul.net.filesharing;

@kotlin.jvm.JvmName("-initializefileSharingConfirmation")
inline fun fileSharingConfirmation(block: qaul.net.filesharing.FileSharingConfirmationKt.Dsl.() -> kotlin.Unit): qaul.net.filesharing.FilesharingNet.FileSharingConfirmation =
  qaul.net.filesharing.FileSharingConfirmationKt.Dsl._create(qaul.net.filesharing.FilesharingNet.FileSharingConfirmation.newBuilder()).apply { block() }._build()
object FileSharingConfirmationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.net.filesharing.FilesharingNet.FileSharingConfirmation.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.filesharing.FilesharingNet.FileSharingConfirmation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.filesharing.FilesharingNet.FileSharingConfirmation = _builder.build()

    /**
     * <pre>
     * file id
     * </pre>
     *
     * <code>uint64 file_id = 1;</code>
     */
    var fileId: kotlin.Long
      @JvmName("getFileId")
      get() = _builder.getFileId()
      @JvmName("setFileId")
      set(value) {
        _builder.setFileId(value)
      }
    /**
     * <pre>
     * file id
     * </pre>
     *
     * <code>uint64 file_id = 1;</code>
     */
    fun clearFileId() {
      _builder.clearFileId()
    }

    /**
     * <pre>
     * package sequence
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     */
    var sequence: kotlin.Int
      @JvmName("getSequence")
      get() = _builder.getSequence()
      @JvmName("setSequence")
      set(value) {
        _builder.setSequence(value)
      }
    /**
     * <pre>
     * package sequence
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     */
    fun clearSequence() {
      _builder.clearSequence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.net.filesharing.FilesharingNet.FileSharingConfirmation.copy(block: qaul.net.filesharing.FileSharingConfirmationKt.Dsl.() -> kotlin.Unit): qaul.net.filesharing.FilesharingNet.FileSharingConfirmation =
  qaul.net.filesharing.FileSharingConfirmationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

