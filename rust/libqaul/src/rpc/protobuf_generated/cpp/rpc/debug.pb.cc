// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc/debug.proto

#include "rpc/debug.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace qaul {
namespace rpc {
namespace debug {
constexpr Debug::Debug(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct DebugDefaultTypeInternal {
  constexpr DebugDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DebugDefaultTypeInternal() {}
  union {
    Debug _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DebugDefaultTypeInternal _Debug_default_instance_;
constexpr HeartbeatRequest::HeartbeatRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HeartbeatRequestDefaultTypeInternal {
  constexpr HeartbeatRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
constexpr HeartbeatResponse::HeartbeatResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HeartbeatResponseDefaultTypeInternal {
  constexpr HeartbeatResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HeartbeatResponseDefaultTypeInternal() {}
  union {
    HeartbeatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;
constexpr Panic::Panic(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PanicDefaultTypeInternal {
  constexpr PanicDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PanicDefaultTypeInternal() {}
  union {
    Panic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PanicDefaultTypeInternal _Panic_default_instance_;
}  // namespace debug
}  // namespace rpc
}  // namespace qaul
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rpc_2fdebug_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_rpc_2fdebug_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rpc_2fdebug_2eproto = nullptr;

const uint32_t TableStruct_rpc_2fdebug_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::Debug, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::Debug, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::HeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::debug::Panic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::rpc::debug::Debug)},
  { 10, -1, -1, sizeof(::qaul::rpc::debug::HeartbeatRequest)},
  { 16, -1, -1, sizeof(::qaul::rpc::debug::HeartbeatResponse)},
  { 22, -1, -1, sizeof(::qaul::rpc::debug::Panic)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::rpc::debug::_Debug_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::rpc::debug::_HeartbeatRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::rpc::debug::_HeartbeatResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::qaul::rpc::debug::_Panic_default_instance_),
};

const char descriptor_table_protodef_rpc_2fdebug_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017rpc/debug.proto\022\016qaul.rpc.debug\"\272\001\n\005De"
  "bug\022=\n\021heartbeat_request\030\001 \001(\0132 .qaul.rp"
  "c.debug.HeartbeatRequestH\000\022\?\n\022heartbeat_"
  "response\030\002 \001(\0132!.qaul.rpc.debug.Heartbea"
  "tResponseH\000\022&\n\005panic\030\003 \001(\0132\025.qaul.rpc.de"
  "bug.PanicH\000B\t\n\007message\"\022\n\020HeartbeatReque"
  "st\"\023\n\021HeartbeatResponse\"\007\n\005Panicb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rpc_2fdebug_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rpc_2fdebug_2eproto = {
  false, false, 280, descriptor_table_protodef_rpc_2fdebug_2eproto, "rpc/debug.proto", 
  &descriptor_table_rpc_2fdebug_2eproto_once, nullptr, 0, 4,
  schemas, file_default_instances, TableStruct_rpc_2fdebug_2eproto::offsets,
  file_level_metadata_rpc_2fdebug_2eproto, file_level_enum_descriptors_rpc_2fdebug_2eproto, file_level_service_descriptors_rpc_2fdebug_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_rpc_2fdebug_2eproto_getter() {
  return &descriptor_table_rpc_2fdebug_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_rpc_2fdebug_2eproto(&descriptor_table_rpc_2fdebug_2eproto);
namespace qaul {
namespace rpc {
namespace debug {

// ===================================================================

class Debug::_Internal {
 public:
  static const ::qaul::rpc::debug::HeartbeatRequest& heartbeat_request(const Debug* msg);
  static const ::qaul::rpc::debug::HeartbeatResponse& heartbeat_response(const Debug* msg);
  static const ::qaul::rpc::debug::Panic& panic(const Debug* msg);
};

const ::qaul::rpc::debug::HeartbeatRequest&
Debug::_Internal::heartbeat_request(const Debug* msg) {
  return *msg->message_.heartbeat_request_;
}
const ::qaul::rpc::debug::HeartbeatResponse&
Debug::_Internal::heartbeat_response(const Debug* msg) {
  return *msg->message_.heartbeat_response_;
}
const ::qaul::rpc::debug::Panic&
Debug::_Internal::panic(const Debug* msg) {
  return *msg->message_.panic_;
}
void Debug::set_allocated_heartbeat_request(::qaul::rpc::debug::HeartbeatRequest* heartbeat_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (heartbeat_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::rpc::debug::HeartbeatRequest>::GetOwningArena(heartbeat_request);
    if (message_arena != submessage_arena) {
      heartbeat_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heartbeat_request, submessage_arena);
    }
    set_has_heartbeat_request();
    message_.heartbeat_request_ = heartbeat_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.debug.Debug.heartbeat_request)
}
void Debug::set_allocated_heartbeat_response(::qaul::rpc::debug::HeartbeatResponse* heartbeat_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (heartbeat_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::rpc::debug::HeartbeatResponse>::GetOwningArena(heartbeat_response);
    if (message_arena != submessage_arena) {
      heartbeat_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heartbeat_response, submessage_arena);
    }
    set_has_heartbeat_response();
    message_.heartbeat_response_ = heartbeat_response;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.debug.Debug.heartbeat_response)
}
void Debug::set_allocated_panic(::qaul::rpc::debug::Panic* panic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (panic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::qaul::rpc::debug::Panic>::GetOwningArena(panic);
    if (message_arena != submessage_arena) {
      panic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, panic, submessage_arena);
    }
    set_has_panic();
    message_.panic_ = panic;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.debug.Debug.panic)
}
Debug::Debug(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.debug.Debug)
}
Debug::Debug(const Debug& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kHeartbeatRequest: {
      _internal_mutable_heartbeat_request()->::qaul::rpc::debug::HeartbeatRequest::MergeFrom(from._internal_heartbeat_request());
      break;
    }
    case kHeartbeatResponse: {
      _internal_mutable_heartbeat_response()->::qaul::rpc::debug::HeartbeatResponse::MergeFrom(from._internal_heartbeat_response());
      break;
    }
    case kPanic: {
      _internal_mutable_panic()->::qaul::rpc::debug::Panic::MergeFrom(from._internal_panic());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.debug.Debug)
}

inline void Debug::SharedCtor() {
clear_has_message();
}

Debug::~Debug() {
  // @@protoc_insertion_point(destructor:qaul.rpc.debug.Debug)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Debug::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Debug::ArenaDtor(void* object) {
  Debug* _this = reinterpret_cast< Debug* >(object);
  (void)_this;
}
void Debug::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Debug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Debug::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.rpc.debug.Debug)
  switch (message_case()) {
    case kHeartbeatRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.heartbeat_request_;
      }
      break;
    }
    case kHeartbeatResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.heartbeat_response_;
      }
      break;
    }
    case kPanic: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.panic_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.debug.Debug)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Debug::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.debug.Panic panic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_panic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Debug::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.debug.Debug)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;
  if (_internal_has_heartbeat_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::heartbeat_request(this), target, stream);
  }

  // .qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;
  if (_internal_has_heartbeat_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::heartbeat_response(this), target, stream);
  }

  // .qaul.rpc.debug.Panic panic = 3;
  if (_internal_has_panic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::panic(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.debug.Debug)
  return target;
}

size_t Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.debug.Debug)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;
    case kHeartbeatRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.heartbeat_request_);
      break;
    }
    // .qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;
    case kHeartbeatResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.heartbeat_response_);
      break;
    }
    // .qaul.rpc.debug.Panic panic = 3;
    case kPanic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.panic_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Debug::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Debug::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Debug::GetClassData() const { return &_class_data_; }

void Debug::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Debug *>(to)->MergeFrom(
      static_cast<const Debug &>(from));
}


void Debug::MergeFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.debug.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kHeartbeatRequest: {
      _internal_mutable_heartbeat_request()->::qaul::rpc::debug::HeartbeatRequest::MergeFrom(from._internal_heartbeat_request());
      break;
    }
    case kHeartbeatResponse: {
      _internal_mutable_heartbeat_response()->::qaul::rpc::debug::HeartbeatResponse::MergeFrom(from._internal_heartbeat_response());
      break;
    }
    case kPanic: {
      _internal_mutable_panic()->::qaul::rpc::debug::Panic::MergeFrom(from._internal_panic());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.debug.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug::IsInitialized() const {
  return true;
}

void Debug::InternalSwap(Debug* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Debug::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2fdebug_2eproto_getter, &descriptor_table_rpc_2fdebug_2eproto_once,
      file_level_metadata_rpc_2fdebug_2eproto[0]);
}

// ===================================================================

class HeartbeatRequest::_Internal {
 public:
};

HeartbeatRequest::HeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.debug.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.debug.HeartbeatRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartbeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartbeatRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2fdebug_2eproto_getter, &descriptor_table_rpc_2fdebug_2eproto_once,
      file_level_metadata_rpc_2fdebug_2eproto[1]);
}

// ===================================================================

class HeartbeatResponse::_Internal {
 public:
};

HeartbeatResponse::HeartbeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.debug.HeartbeatResponse)
}
HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.debug.HeartbeatResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartbeatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartbeatResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2fdebug_2eproto_getter, &descriptor_table_rpc_2fdebug_2eproto_once,
      file_level_metadata_rpc_2fdebug_2eproto[2]);
}

// ===================================================================

class Panic::_Internal {
 public:
};

Panic::Panic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.debug.Panic)
}
Panic::Panic(const Panic& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.debug.Panic)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Panic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Panic::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Panic::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_rpc_2fdebug_2eproto_getter, &descriptor_table_rpc_2fdebug_2eproto_once,
      file_level_metadata_rpc_2fdebug_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace debug
}  // namespace rpc
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::rpc::debug::Debug* Arena::CreateMaybeMessage< ::qaul::rpc::debug::Debug >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::debug::Debug >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::debug::HeartbeatRequest* Arena::CreateMaybeMessage< ::qaul::rpc::debug::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::debug::HeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::debug::HeartbeatResponse* Arena::CreateMaybeMessage< ::qaul::rpc::debug::HeartbeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::debug::HeartbeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::debug::Panic* Arena::CreateMaybeMessage< ::qaul::rpc::debug::Panic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::debug::Panic >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
