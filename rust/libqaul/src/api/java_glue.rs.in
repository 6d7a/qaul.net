//Automatically generated by rifgen
use crate::api::BleReceiveResponseCallback;
use jni_sys::*;

foreign_typemap!(
    ($p:r_type) Vec<u8> => jbyteArray {
        let slice = {
            let p = $p.clone();
            let mut v = std::mem::ManuallyDrop::new(p);
            let p = v.as_mut_ptr();
            let len = v.len();
            let cap = v.capacity();
            unsafe { Vec::from_raw_parts(p as *mut i8, len, cap) }
        };
        let raw = JavaByteArray::from_slice_to_raw(&slice, env);
        $out = raw;
    };
    ($p:f_type) => "jbyteArray";
);

foreign_callback!(
	callback BleReceiveResponseCallback {
		self_type BleReceiveResponseCallback;
		bleReceiveResponse = BleRequestCallback::ble_receive_response(& self , data : Vec<u8>);
	}
);