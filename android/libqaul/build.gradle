plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    ndkVersion "22.1.7171670"
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module  = "../../libqaul"       // Or whatever directory contains your Cargo.toml
    libname = "libqaul"          // Or whatever matches Cargo.toml's [package] name.
    // the targets create the following libraries:
    // arm 
    //     rust build folder:  target/armv7-linux-androideabi/debug/liblibqaul.so
    //     android lib folder: android/libqaul/src/main/jniLibs/armeabi-v7a
    // arm64
    //     rust build folder:  target/aarch64-linux-android/debug/liblibqaul.so
    //     android lib folder: android/libqaul/src/main/jniLibs/arm64-v8a
    // x86
    //     rust build folder:  target/i686-linux-android/debug/liblibqaul.so
    //     android lib folder: android/libqaul/src/main/jniLibs/x86
    // linux-x86-64
    //     rust build folder:  target/debug/liblibqaul.so
    //     android lib folder: android/libqaul/src/main/jniLibs/x86_64
    targets = ["arm", "arm64", "x86", "linux-x86-64"]
    prebuiltToolchains = true
    //profile = 'release'
    apiLevel = 26
}
